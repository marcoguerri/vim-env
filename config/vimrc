autocmd vimenter * NERDTree

set encoding=utf-8
set number
set mouse=a
set completeopt=longest,menuone
set noshowmode
set ttymouse=xterm2
set tabstop=4
set expandtab

syntax on
filetype plugin indent on
let g:airline#extensions#tabline#enabled = 1

" Buffer navigation mapping
map bn :bn<cr>
map bp :bp<cr>
map bd :bd<cr>

" Generic vim mappings
nnoremap <silent> <C-s> :vertical sb<CR>
nnoremap <silent> <C-l> :ls<CR>
nnoremap <silent> <C-q> :wqa<CR>



" Go development configuration
let g:go_metalinter_command = "golangci-lint"
let g:go_metalinter_autosave_enabled = ['vet', 'golint', 'misspell', 'deadcode', 'varcheck']

" Build and run tests on save.
augroup auto_go
	autocmd!
	autocmd BufWritePost *.go :GoBuild
	autocmd BufWritePost *.go :GoMetaLinter
	autocmd BufWritePost *_test.go :GoTest
	autocmd BufWritePost *_test.go :GoMetaLinter
augroup end

" Show 100 results in Ctrl-P search window without exceeding
" window size constraints.
let g:ctrlp_match_window = 'results:100'


" Ctrl-P bindings
nnoremap <silent> <C-b> :CtrlPBuffer<CR>
nnoremap <silent> <C-a> :CtrlPTag<CR>

" Commond bindins 
autocmd FileType go nnoremap <silent> <C-r> :GoRun<CR>
autocmd FileType rust nnoremap <silent> <C-r> :Crun<CR>

autocmd FileType go nnoremap <silent> <C-t> :GoTest<CR>
autocmd FileType rust nnoremap <silent> <C-t> :Ctest<CR>

" Status line
set statusline=%t

" Syntastic statusline
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" Syntastic configuration
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Show signature help on accepting autocompletion
autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')

" Tagbar
nmap <F8> :TagbarToggle<CR>

" Rust configuration
let g:rustfmt_autosave = 1
let g:cargo_shell_command_runner = '!'
